<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>计算机系统基础(2)</title>
      <link href="/2022/07/19/ji-suan-ji-xi-tong-ji-chu-2/"/>
      <url>/2022/07/19/ji-suan-ji-xi-tong-ji-chu-2/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机系统基础-2"><a href="#计算机系统基础-2" class="headerlink" title="计算机系统基础(2)"></a>计算机系统基础(2)</h1><h3 id="浮点数"><a href="#浮点数" class="headerlink" title="浮点数"></a>浮点数</h3><p>​        计算机中表示浮点数，</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机系统基础(1)</title>
      <link href="/2022/07/19/ji-suan-ji-xi-tong-ji-chu-1/"/>
      <url>/2022/07/19/ji-suan-ji-xi-tong-ji-chu-1/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机系统基础（1）"><a href="#计算机系统基础（1）" class="headerlink" title="计算机系统基础（1）"></a>计算机系统基础（1）</h1><h3 id="冯诺依曼结构的主要思想："><a href="#冯诺依曼结构的主要思想：" class="headerlink" title="冯诺依曼结构的主要思想："></a>冯诺依曼结构的主要思想：</h3><p>​       1.计算机最少应有 <strong>运算器 控制器 存储器 输入设备和输出设备</strong> </p><p>​       各组件功能：<br>​        存储器 ： 存放数据和指令，二者在形式上没有区别，都是01序列。<br>​        控制器： 自动取出指令并执行<br>​        运算器：有基本的运算功能，逻辑运算和附加运算<br>​        输入和输出设备：完成操作者和计算机的通信<br>​        2.计算机采用<strong>存储程序</strong>的工作方式<br>​            任何计算机完成的工作应先被编写成程序，然后将程序和原始数据送入主存并启动执行<br>​        3.计算机工作的过程：<br>​            程序和数据先由输入设备输入至存储器，存储器将得到的程序中的指令和数据所在的地址逐条给到控制器，控制器执行命令，控制运算器从存储器中读取数据所在的地址，并进行运算，得到的结果仍交到存储器中，最后由存储器交到输出设备上，再由输出设备进行输出。<br>​             整个过程突出一个各司其职。</p><h3 id="现代计算机结构"><a href="#现代计算机结构" class="headerlink" title="现代计算机结构"></a>现代计算机结构</h3><p>​        现代计算机和冯诺依曼结构基本相似，只是更加细分，引入寄存器的部件以方便功能的实现。<br>​        整个程序的执行过程就是控制器根据指令取数据，处理数据，放置数据，指令和数据都在存储器中。CPU必须在寄存器中加载数据才能执行。即<strong>首先根据PC从内存中获取指令对应地址的数据，然后将其保存在IR中，然后控制单元会对指令内容进行判断，并调用寄存器、ALU等执行指令内容，然后更新PC，使其指向下一个要执行的指令地址。</strong><br>​        抽象如下图  MAR和MDR看做是CPU和存储器通讯的硬件。<br><img src="/2022/07/19/ji-suan-ji-xi-tong-ji-chu-1/blog\source_posts\计算机系统基础-1\2.png"></p><h3 id="程序的开发到执行"><a href="#程序的开发到执行" class="headerlink" title="程序的开发到执行"></a>程序的开发到执行</h3><p>​        计算机只认识0/1序列，所以要将高级语言编译或解释为机器语言才能执行。编译是一步步完成的，高级语言被预处理之后开始进行汇编语言的转化，最后变为机器语言，然后变成控制信号，这是表象。深层的是计算机通过自己的软件系统(语言处理系统和操作系统)将你的高级语言转化成0/1序列然后开始执行。</p><h3 id="ISA"><a href="#ISA" class="headerlink" title="ISA"></a>ISA</h3><p>​        指令系统，规定了微体系结构中的各个指令，规定了软件对于硬件的控制的方式。</p><h3 id="信息的二进制编码"><a href="#信息的二进制编码" class="headerlink" title="信息的二进制编码"></a>信息的二进制编码</h3><p>​        机器级的数据分为两大类，以有无数值为标志。以16比特为一个单位在内存中存储。<br>​        有数值的包括<strong>整数和浮点数，有正负之分</strong>，无数值的则是<strong>逻辑运算符或是字符</strong>，这些数据最终都是要变成0和1的。整个计算机中浮点数和定点数都是研究定点数的过程，浮点数可以转化成一个定点整数和一个顶点小数，定点整数确定小数点的位置。<br>​        定点数的表示方式有1.原码：方便理解，但是在运算和计算机使用的时候不方便，所以现在只有浮点数的尾数还在用。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
